[{"path":[]},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"graph_query-example","dir":"Articles","previous_headings":"graph_query: describe query as a graph","what":"graph_query example","title":"Get started","text":"","code":"query=spq_init() %>%   spq_add(\"?mayor wdt:P31 ?species\") %>%   spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) %>%   spq_add(\"?mayor p:P39 ?node\") %>%   spq_add(\"?node ps:P39 wd:Q30185\") %>%   spq_add(\"?node pq:P642 ?place\")   graph_query(query,labelling=TRUE) #> $graph #> # A tbl_graph: 6 nodes and 5 edges #> # #> # A rooted tree #> # #> # Node Data: 6 × 4 (active) #>   name                      type     step required #>   <chr>                     <chr>   <int> <lgl>    #> 1 \"?mayor\"                  unknown     1 TRUE     #> 2 \"?node\"                   unknown     3 TRUE     #> 3 \"?place\"                  unknown     5 TRUE     #> 4 \"?species\"                unknown     1 TRUE     #> 5 \"dog\\nhouse cat\\nchicken\" set         2 TRUE     #> 6 \"mayor\"                   set         4 TRUE     #> # #> # Edge Data: 5 × 7 #>    from    to triple                    required  step filtered link          #>   <int> <int> <chr>                     <lgl>    <int> <lgl>    <chr>         #> 1     1     4 ?mayor wdt:P31 ?species   TRUE         1 FALSE    instance of   #> 2     4     5 {wd:Q144 wd:Q146 wd:Q780} TRUE         2 FALSE    values in     #> 3     1     2 ?mayor p:P39 ?node        TRUE         3 FALSE    position held #> # ℹ 2 more rows #>  #> $nsteps #> [1] 5"},{"path":[]},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"plot_query_step","dir":"Articles","previous_headings":"","what":"plot_query_step","title":"Get started","text":"","code":"query=spq_init() %>%   spq_add(\"?mayor wdt:P31 ?species\") %>%   spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) %>%   spq_add(\"?mayor p:P39 ?node\") %>%   spq_add(\"?node ps:P39 wd:Q30185\") %>%   spq_add(\"?node pq:P642 ?place\")   gq=graph_query(query,labelling=TRUE) plot_query_step(gq$graph,plotstep=3)"},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"example-animal-mayors","dir":"Articles","previous_headings":"plot_query_step","what":"example animal mayors","title":"Get started","text":"","code":"query=spq_init() %>%   spq_add(\"?mayor wdt:P31 ?species\") %>%   spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) %>%   spq_add(\"?mayor p:P39 ?node\") %>%   spq_add(\"?node ps:P39 wd:Q30185\") %>%   spq_add(\"?node pq:P642 ?place\")   plot_query(query)"},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"example-hal","dir":"Articles","previous_headings":"plot_query_step","what":"example hal","title":"Get started","text":"","code":"query=spq_init(endpoint=\"hal\") %>%   spq_add(\"?doc dcterms:creator ?createur\") %>%     spq_add(\"?createur hal:structure ?affil\") %>%        spq_add(\"?createur hal:person ?personne\") %>%           spq_add(\"?personne foaf:name 'Lise Vaudor'\") %>%    spq_add(\"?doc dcterms:type ?type\") %>%    spq_label(affil,.languages=NULL) %>%    spq_label(type,.languages=\"fr\") %>%    spq_add(\"?doc dcterms:bibliographicCitation ?citation\") %>% # récupère la citation   spq_add(\"?doc dcterms:issued ?date\") %>%    spq_select(doc,date,citation,type_label)  plot_query(query, layout=\"tree\",flip=TRUE, set_labels=c(\"hal:structure\"=\"id de labo\"), show_step=TRUE) #> [[1]] #>  #> [[2]] #>  #> [[3]] #>  #> [[4]] #>  #> [[5]] #>  #> [[6]] #>  #> [[7]] #>  #> [[8]] #>  #> [[9]]"},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"get_label_1","dir":"Articles","previous_headings":"","what":"get_label_1","title":"Get started","text":"","code":"get_label_1(\"wdt:P31\") #> [1] \"instance of\" get_label_1(\"{wd:Q144 wd:Q146 wd:Q780}\") #> [1] \"dog\\nhouse cat\\nchicken\" get_label_1(\"wdt:P31/wdt:P279*\") #> [1] \"instance of\\nsubclass of\""},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"get_label","dir":"Articles","previous_headings":"","what":"get_label","title":"Get started","text":"","code":"get_label(\"wd:Q152088\",language=\"en\") #> [1] \"fries\" get_label(\"wd:Q152088\",language=\"fr\") #> [1] \"frite\" get_label(c(\"wdt:P31\",\"wdt:P625\",\"'David Bowie'\",\"?item\"), language=\"fr\") #> [1] \"nature de l’élément\"       \"coordonnées géographiques\" #> [3] \"'David Bowie'\"             \"?item\" get_label(\"hal:structure\",endpoint=\"hal\") #> [1] \"hal:structure\""},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"replace_label","dir":"Articles","previous_headings":"","what":"replace_label","title":"Get started","text":"","code":"sequins:::replace_label(\"hal:structure\",c(\"hal:structure\"=\"id de labo\")) #> [1] \"id de labo\" sequins:::replace_label(c(\"tuttut\",\"pouetpouet\",\"ouiiiink\"),                         c(\"tuttut\"=\"klaxon\",\"pouetpouet\"=\"corne de brume\")) #> [1] \"klaxon\"         \"corne de brume\" \"ouiiiink\""},{"path":"https://lvaudor.github.io/sequins/articles/get-started.html","id":"print_values","dir":"Articles","previous_headings":"","what":"print_values","title":"Get started","text":"","code":"sequins:::print_values(\"wdt:P31/wdt:P279*\") #> [1] \"wdt:P31\"  \"wdt:P279\" sequins:::print_values(\"{wd:Q144 wd:Q146 wd:Q780}\") #> [1] \"wd:Q144\" \"wd:Q146\" \"wd:Q780\""},{"path":"https://lvaudor.github.io/sequins/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lise Vaudor. Author, maintainer.","code":""},{"path":"https://lvaudor.github.io/sequins/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Vaudor L (2024). sequins: Show Glitter Queries (SPARQL Queries Written R Code) Graphs. R package version 0.0.0.9000, https://lvaudor.github.io/sequins/.","code":"@Manual{,   title = {sequins: Show Glitter Queries (SPARQL Queries Written As R Code) As Graphs},   author = {Lise Vaudor},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://lvaudor.github.io/sequins/}, }"},{"path":"https://lvaudor.github.io/sequins/reference/get_label.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label","text":"function takes component triple pattern input returns (exists) corresponding human-readable label.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/get_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label","text":"","code":"get_label(   string,   language = \"en\",   endpoint = \"wikidata\",   label_property = \"rdfs:label\" )"},{"path":"https://lvaudor.github.io/sequins/reference/get_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label","text":"string string (part triple pattern) label language language return label (defaults \"en\") endpoint SPARQL endpoint queried (defaults \"wikidata\") label_property name labelling property, instance \"skos:prefLabel\". Defaults \"rdfs:label\". endpoint one usual glitter endpoints (see glitter::usual_endpoints) labelling property set accordingly.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/get_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label","text":"label corresponding string","code":""},{"path":"https://lvaudor.github.io/sequins/reference/get_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label","text":"","code":"get_label(\"wd:Q152088\",language=\"en\") #> [1] \"fries\" get_label(\"wd:Q152088\",language=\"fr\") #> [1] \"frite\" get_label(c(\"wdt:P31\",\"wdt:P625\",\"'David Bowie'\",\"?item\"), language=\"fr\") #> [1] \"nature de l’élément\"       \"coordonnées géographiques\" #> [3] \"'David Bowie'\"             \"?item\"                     get_label(\"hal:structure\",endpoint=\"hal\") #> [1] \"hal:structure\""},{"path":"https://lvaudor.github.io/sequins/reference/get_label_1.html","id":null,"dir":"Reference","previous_headings":"","what":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label_1","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label_1","text":"function takes component triple pattern input returns (exists) corresponding human-readable label.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/get_label_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label_1","text":"","code":"get_label_1(   string,   language = \"en\",   endpoint = \"wikidata\",   label_property = \"rdfs:label\" )"},{"path":"https://lvaudor.github.io/sequins/reference/get_label_1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label_1","text":"string string (part triple pattern) label language language return label (defaults \"en\") endpoint SPARQL endpoint queried (defaults \"wikidata\") label_property name labelling property, instance \"skos:prefLabel\". Defaults \"rdfs:label\". endpoint one usual glitter endpoints (see glitter::usual_endpoints) labelling property set accordingly.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/get_label_1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label_1","text":"label corresponding string","code":""},{"path":"https://lvaudor.github.io/sequins/reference/get_label_1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function takes a component of a triple pattern as input and returns (if it exists) a corresponding human-readable label. — get_label_1","text":"","code":"get_label_1(\"wdt:P31\") #> [1] \"instance of\" get_label_1(\"{wd:Q144 wd:Q146 wd:Q780}\") #> [1] \"dog\\nhouse cat\\nchicken\" get_label_1(\"wdt:P31/wdt:P279*\") #> [1] \"instance of\\nsubclass of\""},{"path":"https://lvaudor.github.io/sequins/reference/graph_query.html","id":null,"dir":"Reference","previous_headings":"","what":"A graph depicting the query — graph_query","title":"A graph depicting the query — graph_query","text":"graph depicting query","code":""},{"path":"https://lvaudor.github.io/sequins/reference/graph_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A graph depicting the query — graph_query","text":"","code":"graph_query(query, labelling = FALSE, language = \"en\", set_labels = NULL)"},{"path":"https://lvaudor.github.io/sequins/reference/graph_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A graph depicting the query — graph_query","text":"query query returned glitter (call spq_perform) labelling whether label identifiers graph language language label. Defaults English (\"en\") set_labels named vector replace elements user-defined label. instance, c(\"hal:structure\"=\"id de labo\")","code":""},{"path":"https://lvaudor.github.io/sequins/reference/graph_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A graph depicting the query — graph_query","text":"tidygraph","code":""},{"path":"https://lvaudor.github.io/sequins/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://lvaudor.github.io/sequins/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot query as a graph. — plot_query","title":"Plot query as a graph. — plot_query","text":"Plot query graph.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot query as a graph. — plot_query","text":"","code":"plot_query(   query,   labelling = FALSE,   language = \"en\",   set_labels = NULL,   layout = \"tree\",   flip = FALSE,   legend = FALSE,   show_step = FALSE )"},{"path":"https://lvaudor.github.io/sequins/reference/plot_query.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot query as a graph. — plot_query","text":"query query returned glitter (call spq_perform) labelling whether label identifiers graph language language label. Defaults English (\"en\") set_labels named vector replace elements user-defined label. instance, c(\"hal:structure\"=\"id de labo\") layout type layout. Can e.g. \"fr\" \"tree\". Defaults \"tree\" flip whether flip coordinates. Defaults FALSE legend whether draw legend. Defaults FALSE","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot query as a graph. — plot_query","text":"plot graph depicting query","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query_step.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot query step as a graph. — plot_query_step","title":"Plot query step as a graph. — plot_query_step","text":"Plot query step graph.","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query_step.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot query step as a graph. — plot_query_step","text":"","code":"plot_query_step(graph, plotstep, layout = \"tree\", flip = FALSE, legend = FALSE)"},{"path":"https://lvaudor.github.io/sequins/reference/plot_query_step.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot query step as a graph. — plot_query_step","text":"graph tidygraph object plotstep step plot layout type layout. Can e.g. \"fr\" \"tree\". Defaults \"tree\" flip whether flip coordinates. Defaults FALSE legend whether draw legend. Defaults FALSE","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query_step.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot query step as a graph. — plot_query_step","text":"plot graph depicting query setp","code":""},{"path":"https://lvaudor.github.io/sequins/reference/plot_query_step.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot query step as a graph. — plot_query_step","text":"","code":"query=spq_init() %>%   spq_add(\"?mayor wdt:P31 ?species\") %>%   spq_set(species = c('wd:Q144','wd:Q146', 'wd:Q780')) %>%   spq_add(\"?mayor p:P39 ?node\") %>%   spq_add(\"?node ps:P39 wd:Q30185\") %>%   spq_add(\"?node pq:P642 ?place\")   gq=graph_query(query,labelling=TRUE) plot_query_step(gq$graph,plotstep=3)"}]
